name: Playwright Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    timeout-minutes: 90
    runs-on: ubuntu-latest

    steps:
      - name: 저장소 체크아웃
        uses: actions/checkout@v4

      - name: Node.js 설정
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npx playwright test --reporter=json,json-summary,html

      - name: Copy test-results into report folder
        if: always()
        run: |
          mkdir -p playwright-report/test-results
          if [ -d test-results ]; then cp -r test-results/* playwright-report/test-results/; fi

      - name: 테스트 결과 업로드 (선택)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results/
          retention-days: 30

      - name: HTML 리포트 업로드 (선택)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: GitHub Pages로 HTML 리포트 배포
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: playwright-report
          publish_branch: gh-pages
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'

      - name: 슬랙 봇 메시지 전송
        if: always()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        run: |
          CHANNEL="#여행"
          STATUS="${{ job.status }}"
          EMOJI="✅"
          TEXT="Playwright PASS"

          if [ "$STATUS" != "success" ]; then
            EMOJI="❌"
            TEXT="Playwright FAIL"
          fi

          # 🔐 json-summary 파일 존재 여부 확인
          if [ ! -f "playwright-report/json-summary.json" ]; then
            echo "❗ json-summary.json 파일 없음. 슬랙 알림을 생략합니다."
            exit 0
          fi

          SUMMARY=$(cat playwright-report/json-summary.json)
          TOTAL=$(echo "$SUMMARY" | jq '.suites | map(.tests) | add | length')
          PASSED=$(echo "$SUMMARY" | jq '[.suites[].specs[].tests[] | select(.outcome=="expected")] | length')
          FAILED=$(echo "$SUMMARY" | jq '[.suites[].specs[].tests[] | select(.outcome=="unexpected")] | length')

          BROWSER=$(jq -r '.suites[0].specs[0].tests[0].results[0].workerIndex' playwright-report/json-report.json | xargs -I{} echo "browser #{}")

          curl -X POST https://slack.com/api/chat.postMessage \
            -H "Authorization: Bearer $SLACK_BOT_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{
              \"channel\": \"$CHANNEL\",
              \"text\": \"$EMOJI $TEXT\n🧪 브라우저: $BROWSER\n📊 실행: $TOTAL, 성공: $PASSED, 실패: $FAILED\n🔗 <https://beddy724.github.io/playwright-practice/|테스트 리포트 보러가기>\"
            }"

